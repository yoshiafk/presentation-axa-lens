# GitHub Actions workflow for automated deployment to GitHub Pages

name: Deploy AXA Lens Presentation to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Optimize images (optional)
        run: |
          # Install imagemagick for image optimization
          sudo apt-get update
          sudo apt-get install -y imagemagick
          
          # Optimize PNG files (maintain quality while reducing size)
          find . -name "*.png" -exec mogrify -strip -interlace Plane -quality 85 {} \;
          
          echo "Images optimized successfully"

      - name: Validate HTML
        run: |
          # Install HTML validator
          npm install -g html-validator-cli
          
          # Validate HTML structure
          html-validator --file=index.html --verbose || echo "HTML validation completed with warnings"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  # Performance check job (optional)
  performance:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.12.x

      - name: Run Lighthouse CI
        run: |
          lhci autorun --upload.target=temporary-public-storage || echo "Lighthouse completed with warnings"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}